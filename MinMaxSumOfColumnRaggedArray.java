package Array6;/*** * Finding min, max column with its index from ragged 2D array */import java.util.ArrayList;public class MinMaxSumOfColumnRaggedArray {    public static double sumOfColumnWised(double[][] matrix, int columnConst){        final int rowMatrixSize = matrix.length;        ArrayList <Integer> rows = new ArrayList<>();        double sum = 0;        if(rowMatrixSize > columnConst){ /*This part performs square part of matrix*/            for(int row = 0; row < rowMatrixSize; row++){                rows.add(row);            }        }        else{ /*This part performs ragged part of matrix*/            for(int row = 0; row < rowMatrixSize; row++){                /*Must existing column matrix is greater than columnConst*/                if(matrix[row].length > columnConst){                    rows.add(row);                }            }        }        /*Sum all elements column wise then row is variable*/        for(final int row: rows){            sum += matrix[row][columnConst];        }        rows.clear();        return sum;    }    public static int findMaxSizeOfColumMatrix(double[][] matrix){        /*First find max colum size*/        int columnMatrixSize = matrix[0].length;        for(final double[] rowMatrix: matrix){            columnMatrixSize = Math.max(columnMatrixSize, rowMatrix.length);        }        return columnMatrixSize;    }    public static double[] getSumOfColumnsOfRaggedArray(double[][] raggedArray){        final int columMatrixSize = findMaxSizeOfColumMatrix(raggedArray);        final double[] sumOfColumns = new double[columMatrixSize];        for(int column = 0; column < columMatrixSize; column++){            sumOfColumns[column] = sumOfColumnWised(raggedArray, column);        }        return sumOfColumns;    }    public static void maxColumnOfRaggedArray(double[][] raggedArray){        double[] sumOfColumns = getSumOfColumnsOfRaggedArray(raggedArray);        double maxColumn = sumOfColumns[0];        int indexMaxColumn = 0;        for(int i = 0; i < sumOfColumns.length; i++){            if(maxColumn < sumOfColumns[i]){                maxColumn = sumOfColumns[i];                indexMaxColumn = i;            }        }        System.out.println("Max column: "+maxColumn+" its index: "+indexMaxColumn);    }    public static void main(String[] args) {        final double[][] raggedArray = {                {1,  2,  3,  4, 50, 100},                {5,  6,  7, 8, },                {9, 10, 11, 12, 1, 100},                {13, 14, 15, 16},        };//        showRaggedArray(raggedArray);        maxColumnOfRaggedArray(raggedArray);        minColumnOfRaggedArray(raggedArray);    }    public static void minColumnOfRaggedArray(double[][] raggedArray){        double[] sumOfColumns = getSumOfColumnsOfRaggedArray(raggedArray);        double minColumn = sumOfColumns[0];        int indexMinColumn = 0;        for(int i = 0; i < sumOfColumns.length; i++){            if(minColumn > sumOfColumns[i]){                minColumn = sumOfColumns[i];                indexMinColumn = i;            }        }        System.out.println("Min column: "+minColumn+" its index: "+indexMinColumn);    }    public static void showRaggedArray(double[][] raggedArray){        for(final double[] rowMatrix: raggedArray){            for(final double inner: rowMatrix){                System.out.print(inner+"\t");            }            System.out.println();        }    }}