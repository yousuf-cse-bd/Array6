package Array6;/** * Finding rows min & max of any typed 2D array like ragged */public class MinMaxSumOfRowOfRaggedArray2D {    public static int sumOfRowWised(int[][] matrix, int rowNumber){        int sum = 0;        final int len = matrix[rowNumber].length;        for(int column = 0; column < len; column++){            sum += matrix[rowNumber][column];        }        return sum;    }    public static void maxRowOfRaggedArray2D(int[][] raggedArray2D){        final int matrixSize = raggedArray2D.length;        final int[] sumOfRows = new int[matrixSize];        for(int row = 0; row < matrixSize; row++){            sumOfRows[row] = sumOfRowWised(raggedArray2D, row);        }        int maxRow = sumOfRows[0];        int indexOfMaxRow = 0;        for(int i = 1; i < matrixSize; i++){            if(maxRow < sumOfRows[i]){                maxRow = sumOfRows[i];                indexOfMaxRow = i;            }        }        System.out.println("Row "+indexOfMaxRow+" has the MAXIMUM sum of "+maxRow);    }    public static void main(String[] args) {        final int[][] raggedArray2D = {                {10},                {10, 2},                {10, 2, -15},        };        maxRowOfRaggedArray2D(raggedArray2D);        System.out.println("-----------------------------------------------");        minRowOfRaggedArray2D(raggedArray2D);    }    public static void minRowOfRaggedArray2D(int[][] raggedArray2D){        final int matrixSize = raggedArray2D.length;        final int[] sumOfRows = new int[matrixSize];        for(int row = 0; row < matrixSize; row++){            sumOfRows[row] = sumOfRowWised(raggedArray2D, row);        }        int minRow = sumOfRows[0];        int indexOfMinRow = 0;        for(int i = 1; i < matrixSize; i++){            if(minRow > sumOfRows[i]){                minRow = sumOfRows[i];                indexOfMinRow= i;            }        }        System.out.println("Row "+indexOfMinRow+" has the MINIMUM sum of "+minRow);    }}